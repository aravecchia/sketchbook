// Este codigo aciona uma matriz 8x8 de LEDs bicolores
//usando 3 CIs 74HC595.
//O primeiro controla o acionamento dos LEDs vermelhos nas colunas.
//O segundo controla o acionamento dos LEDs verdes nas colunas.
//O terceiro controla o acionamento das linhas.
/*Desenvolvido por Alexandre Aravecchia
  Projetista, desenvolvedor, programador
 aravecchia@gmail.com
 www.aravecchia.weebly.com
 */
#include "Arduino.h"

// define os pinos de clock(11), latch(12) e data(14) do 74HC595
int CLOCK = 2;
int LATCH = 3; 
int DATA = 4;

// Define uma pequena lista de caracteres (funcao concatenate, no libreoffice, ajuda muito!)
byte Fabiola[8] =  {
  B00000000, B00110000, B01111000, B01111100, B00111110, B01111100, B01111000, B00110000};
byte A[8] =  {
  B00000000, B01111111, B11111111, B11001100, B11001100, B11111111, B01111111, B00000000};
byte B[8] =  {
  B00000000, B11111111, B11111111, B11011011, B11011011, B11111011, B01101111, B00000110};
byte C[8] =  {
  B00000000, B00111100, B01111110, B11000011, B11000011, B11000011, B01100110, B01100110};
byte D[8] =  {
  B00000000, B11111111, B11111111, B11000011, B11000011, B11000011, B11111111, B01111110};
byte E[8] =  {
  B00000000, B11111111, B11111111, B11011011, B11011011, B11000011, B11000011, B11000011};
byte F[8] =  {
  B00000000, B11111111, B11111111, B11011000, B11011000, B11000000, B11000000, B11000000};
byte G[8] =  {
  B00000000, B00111100, B01111110, B11000011, B11001011, B11001011, B01101110, B01101110};
byte H[8] =  {
  B00000000, B11111111, B11111111, B00011000, B00011000, B00011000, B11111111, B11111111};
byte I[8] =  {
  B00000000, B00000000, B11000011, B11111111, B11111111, B11000011, B00000000, B00000000};
byte J[8] =  {
  B00000000, B00001110, B00001111, B00000011, B11000011, B11111111, B11111110, B11000000};
byte K[8] =  {
  B00000000, B11111111, B11111111, B00011100, B00111110, B11100111, B11000011, B10000001};
byte L[8] =  {
  B00000000, B11111111, B11111111, B00000011, B00000011, B00000011, B00000011, B00000011};
byte M[8] =  {
  B00000000, B11111111, B11111111, B00111000, B00011100, B00111000, B11111111, B11111111};
byte N[8] =  {
  B00000000, B11111111, B11111111, B01111000, B00111100, B00011110, B11111111, B11111111};
byte O[8] =  {
  B00000000, B00111100, B01111110, B11000111, B11000011, B11000111, B01111110, B00111100};
byte P[8] =  {
  B00000000, B11111111, B11111111, B11011000, B11011000, B11111000, B11110000, B01110000};
byte Q[8] =  {
  B00000000, B00111100, B01111110, B11000111, B11000011, B11000111, B01111111, B00111101};
byte R[8] =  {
  B00000000, B11111111, B11111111, B11011000, B11011100, B11111111, B11110111, B01110001};
byte S[8] =  {
  B00000000, B01100110, B11110111, B11010011, B11011011, B11001011, B11101111, B01101110};
byte T[8] =  {
  B00000000, B11000000, B11000000, B11111111, B11111111, B11000000, B11000000, B11000000};
byte U[8] =  {
  B00000000, B11111110, B11111111, B00000011, B00000011, B00000011, B11111111, B11111110};
byte V[8] =  {
  B00000000, B11100000, B11111100, B00011110, B00000011, B00011111, B11111110, B11110000};
byte W[8] =  {
  B00000000, B11111111, B11111111, B00000110, B00001100, B00000110, B11111111, B11111111};
byte X[8] =  {
  B00000000, B11000011, B11100111, B01111110, B00011100, B00111110, B11100111, B11000111};
byte Y[8] =  {
  B00000000, B11100000, B11110000, B00111111, B00011111, B00111111, B11110000, B11100000};
byte Z[8] =  {
  B00000000, B11000111, B11001111, B11011111, B11111111, B11110011, B11100011, B11000011};
byte zero[8] =  {
  B00000000, B00111100, B01111110, B11000111, B11010011, B11000111, B01111110, B00111100};
byte um[8] =  {
  B00000000, B00000000, B01100011, B11111111, B11111111, B11111111, B00000011, B00000000};
byte dois[8] =  {
  B00000000, B01100011, B11100111, B11001111, B11011111, B11111011, B11110011, B1100011};
byte tres[8] =  {
  B00000000, B01100110, B11100111, B11000011, B10011011, B11111111, B11101110, B01100110};
byte quatro[8] =  {
  B00000000, B00001110, B00011110, B00111110, B01110110, B11111111, B11111111, B0000011};
byte cinco[8] =  {
  B00000000, B11110011, B11110011, B11011011, B11011011, B11011111, B11001110, B11001100};
byte seis[8] =  {
  B00000000, B01111110, B11111111, B11011111, B11011011, B11011111, B11011110, B01001110};
byte sete[8] =  {
  B00000000, B11000000, B11000111, B11001111, B11011111, B11111000, B11110000, B11110000};
byte oito[8] =  {
  B00000000, B00001110, B01111111, B11111011, B11011011, B11111111, B01111111, B00001110};
byte nove[8] =  {
  B00000000, B01110011, B11111011, B11011011, B11011011, B11111111, B11111111, B00111100};
byte minus[8] =  {
  B00000000, B00000000, B00011000, B00011000, B00011000, B00011000, B00000000, B00000000};
byte direita[8] =  {
  B00000000, B11000011, B11100111, B01111110, B00111100, B00011000, B00011000, B00011000};
byte esquerda[8] =  {
  B00000000, B00011000, B00111100, B01111110, B11100111, B11000011, B10000001, B00000000};
byte doispontos[8] =  {
  B00000000, B00000000, B00000000, B01100110, B01100110, B00000000, B00000000, B00000000};
byte barradir[8] =  {
  B00000000, B00000010, B00000110, B00001100, B00011000, B00110000, B01100000, B01000000};
byte barraesq[8] =  {
  B00000000, B01000000, B01100000, B00110000, B00011000, B00001100, B00000110, B00000010};
byte asterisco[8] =  {
  B00000000, B00010000, B01010100, B00111000, B11111110, B00111000, B01010100, B00010000};
byte pcento[8] =  {
  B00000000, B01000010, B10100110, B01101100, B00011000, B00110010, B01100101, B01000010};
byte inter[8] =  {
  B00000000, B01100000, B11100000, B10001011, B11011011, B11111000, B01110000, B00100000};
byte exc[8] =  {
  B00000000, B00000000, B00000000, B11111011, B11111011, B00000000, B00000000, B00000000};
byte tilA[8] =  {
  B00000000, B00001111, B10011111, B10111110, B10110110, B10111110, B10011111, B00001111};
byte tilB[8] =  {
  B00000000, B00001110, B10011111, B10111111, B10110011, B10111111, B10011111, B0001110};
byte igual[8] =  {
  B00000000, B00000000, B01100110, B01100110, B01100110, B01100110, B00000000, B00000000};
byte plus[8] =  {
  B00000000, B00011000, B00011000, B01111110, B01111110, B00011000, B00011000, B00000000};
byte SPACE[8] =  {
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000};


void setup()
{
  Serial.begin(9600);

  pinMode(LATCH, OUTPUT);
  pinMode(CLOCK, OUTPUT);
  pinMode(DATA, OUTPUT);
}

void loop()
{
  int t=1000;
  {

    for (int z=0; z<8; z++)
    {
      digitalWrite(LATCH, LOW);                              //Le decimos a los registros que empiecen a escuchar los datos
      shiftOut(DATA, CLOCK, MSBFIRST, 0);                //Le decimos que en el ultimo registro no encienda nada
      shiftOut(DATA, CLOCK, MSBFIRST, plus[z]);  //Le decimos que imprima la lÃ­nea z de la letra en el primer registro (rojo)
      digitalWrite(LATCH, HIGH);                             //Guarda y graba las salidas en los registros al poner a 1 el latch
                           //Apagamos esa fila poniendola en alto
      delay(t);
    }
  }
}













